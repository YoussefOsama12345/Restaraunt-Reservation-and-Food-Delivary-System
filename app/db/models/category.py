"""
Defines the SQLAlchemy ORM model for Category entities used to organize menu items.

Categories help group menu items for easier navigation and user experience. This model 
supports nested subcategories through a self-referential relationship, allowing 
multi-level categorization (e.g., "Drinks" â†’ "Cold Drinks").

Classes:
    - Category: SQLAlchemy model representing a menu category or subcategory.

Usage:
    Categories are used in menus, filters, and visual layout of menu sections. 
    They also store metadata like item count and total sales for analytics.
"""

from sqlalchemy import Column, Integer, String, Float, ForeignKey, DateTime
from sqlalchemy.orm import relationship, backref
from datetime import datetime
from .base import Base


class Category(Base):
    """
    Category model representing menu item groupings (e.g., Breakfast, Desserts).

    Attributes:
        - id: Primary key
        - name: Unique name of the category
        - description: Optional description text
        - created_at: Timestamp when the category was added
        - updated_at: Timestamp of the last update
        - image_url: Optional image link for category thumbnail
        - display_order: Integer used to control display order in menus
        - parent_id: ID of parent category for nested subcategories
        - item_count: Total number of items under this category
        - total_sales: Total revenue generated by items in this category

    Relationships:
        - menu_items: One-to-many with MenuItem
        - parent: Self-referential relationship to allow category nesting
        - subcategories: Backref representing all child categories
    """
    __tablename__ = "categories"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String(100), nullable=False, unique=True)
    description = Column(String(255), nullable=True)
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    image_url = Column(String(255), nullable=True)
    display_order = Column(Integer, default=0, nullable=False)
    parent_id = Column(Integer, ForeignKey('categories.id'), nullable=True)
    item_count = Column(Integer, default=0, nullable=False)
    total_sales = Column(Float, default=0.0, nullable=False)
    
    # Relationships
    menu_items = relationship("MenuItem", back_populates="category", cascade="all, delete-orphan", passive_deletes=True, single_parent=True)
    parent = relationship("Category", remote_side=[id], backref=backref("subcategories", cascade="all, delete-orphan", passive_deletes=True, single_parent=True))
